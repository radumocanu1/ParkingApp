version: '3.8'



services:
  mysqldb:
    image: mysql:8
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_TCP_PORT=${MYSQL_PORT}
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - db:/var/lib/mysql


  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    restart: unless-stopped
    env_file: ./.env
    environment:
      - DB_VENDOR=mysql
      - DB_ADDR=mysqldb
      - DB_PORT=${MYSQL_PORT}
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USER={$MYSQL_USER}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - ${KEYCLOAK_PORT}:${KEYCLOAK_PORT}
    command: ["start-dev", "--http-port=${KEYCLOAK_PORT}"]
    depends_on:
      - mysqldb
    volumes:
      - keycloak_data:/opt/keycloak/data


  parco-spring:
    image: radumocanu02/parco-spring:0.0.4
    depends_on:
      - keycloak
      - mysqldb
    restart: on-failure
    env_file: ./.env
    ports:
      - ${SPRING_PORT}:${SPRING_PORT}
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:3307/$MYSQL_DATABASE?useSSL=false&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "$MYSQL_USER",
        "spring.datasource.password" : "$MYSQL_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update",
        "spring.security.oauth2.resourceserver.jwt.issuer-uri" : "http://keycloak:8081/realms/Parco",
        "spring.security.oauth2.resourceserver.jwt.jwk-set-uri" : "http://keycloak:8081/realms/Parco/protocol/openid-connect/certs"
      }'
    volumes:
      - .m2:/root/.m2
      - ./listingPictures:/app/listingPictures
      - ./profilePictures:/app/profilePictures
    stdin_open: true
    tty: true


  angular-app:
    build:
      context: /Users/licenta/amParcat/ParcoFrontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - parco-spring
    environment:
      - NODE_ENV=production


volumes:
  db:
  keycloak_data:
